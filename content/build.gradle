plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    // id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // QueryDSL 플러그인 사용 시
}

group = 'kt.aivle'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 공통 모듈
    implementation project(':common')

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2' // 개발용

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Swagger/OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // File Processing
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'

    // AWS S3 (S3를 사용하는 경우)
    implementation 'software.amazon.awssdk:s3:2.21.29'

    // FFmpeg (고급 미디어 처리가 필요한 경우)
    implementation 'net.bramp.ffmpeg:ffmpeg:0.7.0'

    // Image Processing
    implementation 'org.imgscalr:imgscalr-lib:4.2'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

// QueryDSL 설정 (수동 설정 방식)
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

tasks.named('test') {
    useJUnitPlatform()
}

// JAR 빌드 설정
jar {
    enabled = false
    archiveClassifier = ''
}

bootJar {
    archiveFileName = 'content-management-system.jar'
}