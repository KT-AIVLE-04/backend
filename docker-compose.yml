services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - backend

  fastapi:
    image: shee9812/backend_ai:latest
    container_name: fastapi
    ports:
      - "8000:8000"
    networks:
      - backend

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    depends_on:
      - auth-service
      - store-service
      - shorts-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    networks:
      - backend

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      - mysql
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  store-service:
    build:
      context: ./store-service
      dockerfile: Dockerfile
    container_name: store-service
    depends_on:
      - mysql
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  shorts-service:
    build:
      context: ./shorts-service
      dockerfile: Dockerfile
    container_name: shorts-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - backend

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: userstore
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  redis:
    image: redis:7.2
    container_name: redis
    restart: always
    networks:
      - backend

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6378:6379"
    restart: always
    networks:
      - backend

volumes:
  mysql_data:

networks:
  backend:
    driver: bridge